# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/

#= require application
#= require hmd/hmd
#= require hmd/hmd.ricaleinline

<% environment.context_class.instance_eval { include Rails.application.routes.url_helpers } %>

shelf = {} unless typeof shelf is typeof {}

shelf.isChanged = false
shelf.confirmMessageToNotSave = "저장되지 않았습니다. 계속 하시겠습니까?"
shelf.confirmMessageWhenUnload = "저장되지 않은 데이터가 있습니다."

shelf.resizeResponsive = ->
  $source = $("#source")
  $target = $("#target")
  $list   = $("#list")

  if $source.exists()
    boxHeight = $(window).height() - $source.offset().top - 15
    $source.css("height", boxHeight)
    $target.css("height", boxHeight)
    $list.css(  "height", boxHeight)

  return


shelf.runHmd = ->
  hmd.run "#source", "#target"


shelf.confirmToNotSave = (event) ->
  if shelf.isChanged
    return confirm(shelf.confirmMessageToNotSave)
  else
    return true



shelf.newWriting = (event) ->
  event.preventDefault()

  if !shelf.confirmToNotSave()
    return false

  $("input[name='writing_id']").val("")
  $("#writing_title").text("New Document")
  $("input[name='category_id']").val("")
  $("#source").val("")
  $("#target").text("")
  $("input[name='private']").val("true")

  shelf.isChanged = false
  $('#source').bind('input propertychange', shelf.onChangeSource)

shelf.showWriting = (event) ->
  if !shelf.confirmToNotSave()
    return false

  writingId = $(this).attr('id').slice(8)

  $.ajax(
    url: "/writings/" + writingId
    type: "GET"
    dataType: "script"
  ).done ->
    shelf.isChanged = false
    $('#source').bind('input propertychange', shelf.onChangeSource)

shelf.saveWriting = (event) ->
  event.preventDefault()

  if !shelf.confirmToNotSave()
    return false

  writingId  = $("input[name='writing_id']").val()
  title      = $("#writing_title").text()
  categoryId = $("input[name='category_id']").val()
  content    = $("#source").val()
  isPrivate  = $("input[name='private']").val()

  if writingId == "0"
    url = "<%= writings_path %>"
    type = "POST"
    data =
      writing:
        title: title
        category_id: categoryId
        content: content
        private: isPrivate

  else
    url = "/writings/" + writingId
    type = "PUT"
    data =
      writing:
        id: writingId
        title: title
        category_id: categoryId
        content: content
        private: isPrivate

  $.ajax(
    url: url
    type: type
    data: data
    dataType: "script"
  ).done ->
    shelf.isChanged = false
    $('#source').bind('input propertychange', shelf.onChangeSource)



shelf.editTitleAndCategory = (event) ->
  if $("input[name='writing_id'").val() != ""
    $('#modal-basic .modal-title').text("Change Title and Category")
    $('#modal-basic input[name="title"]').val($('#writing_title').text())
    $('#modal-basic input[name="category"]').val()
    $('#modal-basic').modal 'show'

shelf.updateTitleAndCategory = (event) ->
  $('#writing_title').text($('#modal-basic input[name="title"]').val())
  # $('#writing_title').title() $('#modal-basic input[name="category"]').val()



shelf.onChangeSource = (event) ->
  shelf.isChanged = true
  $('#source').unbind('input propertychange', shelf.onChangeSource)



shelf.onReadyDocument = ->
  shelf.runHmd()
  shelf.resizeResponsive()

  $('#new_writing_button').click(shelf.newWriting)
  $('#save_writing_button').click(shelf.saveWriting)
  $('#list').on 'click', '.writing', shelf.showWriting

  $('#source').bind('input propertychange', shelf.onChangeSource)

  $('#writing_title').click(shelf.editTitleAndCategory)
  $('#writing_category').click(shelf.editTitleAndCategory)

  $('#modal-basic #btn-done').click(shelf.updateTitleAndCategory)

$(document).ready shelf.onReadyDocument
$(document).on 'page:load', shelf.onReadyDocument

$(window).load(shelf.resizeResponsive)
         .resize(shelf.resizeResponsive)
         .on 'beforeunload', (event) ->
  if shelf.isChanged
    return shelf.confirmMessageWhenUnload
