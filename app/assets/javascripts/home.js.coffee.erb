# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/

#= require application
#= require hmd/hmd
#= require hmd/hmd.ricaleinline

<% environment.context_class.instance_eval { include Rails.application.routes.url_helpers } %>

shelf = {} unless typeof shelf is typeof {}

shelf.isChanged = false
shelf.confirmMessageToNotSave = "저장되지 않았습니다. 계속 하시겠습니까?"
shelf.confirmMessageWhenUnload = "저장되지 않은 데이터가 있습니다."


#
#
# responsive

shelf.resizeResponsive = ->
  $source = $("#source")
  $target = $("#target")
  $list   = $("#list")

  if $source.exists()
    boxHeight = $(window).height() - $source.offset().top - 15
    $source.css("height", boxHeight)
    $target.css("height", boxHeight)

    listHeight = $(window).height() - $list.offset().top - 15
    $list.css("height", listHeight)

  return

#
#
# hmd

shelf.runHmd = ->
  hmd.run "#source", "#target"

#
#
# writing

shelf.newWriting = (event) ->
  event.preventDefault()

  if !shelf.confirmToNotSave()
    return false

  $("#data_writing_id").val("0")
  $("#data_category_id").val("")
  $("#writing_title").text("New Document")
  $("#source").val("")
  $("#target").text("")
  $("input[name='private']").val("true")

  shelf.SourceIsSaved()

shelf.showWriting = (event) ->
  if !shelf.confirmToNotSave()
    return false

  $eventTarget = $(event.target)
  if $eventTarget.is('.remove_writing_button') or $eventTarget.is('.remove_writing_button .glyphicon')
    return true

  writingId = $(this).attr('id').slice(8)

  $.ajax(
    url: "/writings/" + writingId
    type: "GET"
    dataType: "script"
  ).done ->
    shelf.SourceIsSaved()

shelf.saveWriting = (event) ->
  event.preventDefault()

  writingId  = $("#data_writing_id").val()
  categoryId = $("#data_category_id").val()
  title      = $("#writing_title").text()
  content    = $("#source").val()
  isPrivate  = $("input[name='private']").val()

  if writingId == "0"
    url = "<%= writings_path %>"
    type = "POST"
    data =
      writing:
        title: title
        category_id: categoryId
        content: content
        private: isPrivate

  else
    url = "/writings/" + writingId
    type = "PUT"
    data =
      writing:
        id: writingId
        title: title
        category_id: categoryId
        content: content
        private: isPrivate

  $.ajax(
    url: url
    type: type
    data: data
    dataType: "script"
  ).done ->
    shelf.SourceIsSaved()


shelf.editTitleAndCategory = (event) ->
  if $('#data_writing_id').val() != ""
    $('#modal-edit-writing input[name="title"]').val($('#writing_title').text())
    $('#modal-edit-writing select[name="category_id"]').val($('#data_category_id').val())
    $('#modal-edit-writing').modal 'show'

shelf.updateTitleAndCategory = (event) ->
  $('#writing_title').text($('#modal-edit-writing input[name="title"]').val())
  $('#writing_category').text($('#modal-edit-writing select[name="category_id"] option:selected').text())
  $('#data_category_id').val($('#modal-edit-writing select[name="category_id"]').val())
  shelf.onChangeSource()

#
#
# category

shelf.newCategory = (event) ->
  event.preventDefault()
  if $('#data_writing_id').val() != ""
    $('#modal-new-category form').attr('action', "<%= categories_path %>")
    $('#modal-new-category input[name="category[name]"]').val("")
    $('#modal-new-category').modal 'show'

shelf.editCategory = (event) ->
  event.preventDefault()
  if $('#data_writing_id').val() != ""
    $this = $(this)
    categoryId = $this.closest("li").attr('id').slice(9)
    categoryName = $this.closest("li").find('.name').text()

    $('#modal-edit-category form').attr('action', "<%= categories_path %>/" + categoryId)
    $('#modal-edit-category input[name="category[name]"]').val(categoryName)
    $('#modal-edit-category').modal 'show'

#
#
# etc

shelf.confirmToNotSave = (event) ->
  if shelf.isChanged
    return confirm(shelf.confirmMessageToNotSave)
  else
    return true

shelf.onChangeSource = (event) ->
  shelf.isChanged = true
  $('#source').unbind('input propertychange', shelf.onChangeSource)
  $('#save-light').changeClass('bg-success', 'bg-danger')

shelf.SourceIsSaved = (event) ->
  shelf.isChanged = false
  $('#source').bind('input propertychange', shelf.onChangeSource)
  $('#save-light').changeClass('bg-danger', 'bg-success')



shelf.onReadyDocument = ->
  shelf.runHmd()
  shelf.resizeResponsive()

  $('#new_writing_button').click(shelf.newWriting)
  $('#save_writing_button').click(shelf.saveWriting)
  $('#list').on('click', '.writing', shelf.showWriting)
  $('#list').on('click', '.edit_category_button', shelf.editCategory)

  $('#new_category_button').click(shelf.newCategory)

  $('#source').bind('input propertychange', shelf.onChangeSource)

  $('#writing_title').click(shelf.editTitleAndCategory)
  $('#writing_category').click(shelf.editTitleAndCategory)

  $('#modal-edit-writing #btn-done').click(shelf.updateTitleAndCategory)



$(document).ready shelf.onReadyDocument
$(document).on 'page:load', shelf.onReadyDocument

$(window).load(shelf.resizeResponsive)
         .resize(shelf.resizeResponsive)
         .on 'beforeunload', (event) ->
  if shelf.isChanged
    return shelf.confirmMessageWhenUnload
